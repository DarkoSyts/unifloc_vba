'=======================================================================================
'Unifloc 7.6  Vulpes zerda                                           khabibullin.ra@gubkin.ru
'Petroleum engineering calculations modules (macroses)
'2000 - 2019
'
'=======================================================================================
'
Option Explicit
' класс для описания свойств пласта
' параметры флюида
 
' Private p_fw_perc As Double
 Private p_PI_m3dayatm As Double
 Private p_Pres_atma As Double
' Private p_Pb_atma As Double
 
 Private p_Fluid As CPVT
 ' флюид нужен чтобы определить давление насыщения и обводненность
 
 
 Private p_IPRcurve As TInterpolation
 ' блок оценки качества данных
 'Public' LogMsg As New CLogger                ' логгер
 Public Sub InitProp(Pres_atma, Pb_atma, fw_perc)
 '   p_fw_perc = fw_perc
    p_Pres_atma = Pres_atma
 '   p_Pb_atma = Pb_atma
    
    Set Fluid = New CPVT
    
    Fluid.Pb_atma = Pb_atma
    Fluid.wc_perc = fw_perc
 
 End Sub
 
 Public Property Get Fluid() As CPVT
    Set Fluid = p_Fluid
 End Property
 
 Public Property Set Fluid(val As CPVT)
    Set p_Fluid = val
 End Property
 
 Public Property Get Pb_atma() As Double
    Pb_atma = Fluid.Pb_atma
 End Property
 
 Public Property Get fw_perc() As Double
    fw_perc = Fluid.wc_perc
 End Property
 
 
 Property Get IPRCurve() As TInterpolation
    IPRCurve = p_IPRcurve
 End Property
 
 Property Let PI_m3dayatm(PI_val As Double)
    p_PI_m3dayatm = PI_val
 End Property
 
 Property Get PI_m3dayatm() As Double
   PI_m3dayatm = p_PI_m3dayatm
 End Property
Public Property Get Pres_atma() As Double
    Pres_atma = p_Pres_atma
End Property
Public Property Let Pres_atma(val As Double)
    p_Pres_atma = val
End Property
Public Function Calc_Q_m3Day(ByVal Ptest_atma As Double)
 Calc_Q_m3Day = Calc_Q_IPR_m3Day(Ptest_atma, Pres_atma, Pb_atma, PI_m3dayatm, fw_perc)
End Function
Public Function Calc_Pwf_atma(ByVal qtest As Double)
 
 Calc_Pwf_atma = Calc_Pwf_IPR_atma(qtest, Pres_atma, Pb_atma, PI_m3dayatm, fw_perc)
End Function
Public Function Calc_PI_m3DayAtm(ByVal qtest As Double, ByVal Ptest As Double)
PI_m3dayatm = Calc_PI_IPR_m3DayAtm(qtest, Ptest, Pres_atma, Pb_atma, fw_perc)
Calc_PI_m3DayAtm = PI_m3dayatm
End Function
Public Function Build_IPRcurve() As TInterpolation
    Set p_IPRcurve = New TInterpolation
    
    Const IPRNumPoints = 30
    
    Dim i As Integer
    Dim Qstep As Double
    Dim Pwf As Double
    Dim Qliq_reserv As Double
    Dim maxQ As Double
    
    maxQ = Calc_Q_m3Day(0)
    
    
    
    Qstep = maxQ / IPRNumPoints
    
    For i = 0 To IPRNumPoints
     
     Pwf = Calc_Pwf_atma(i * Qstep)
     p_IPRcurve.AddPoint i * Qstep, Pwf
     
    Next i
        
    Set Build_IPRcurve = p_IPRcurve
End Function
 Public Function SaveState()
 ' сохраняет состояние объекта в двухмерный массив для обеспечения вывода (для отладки)
    Dim stor()
    
    ReDim stor(const_OutputCurveNumPoints, STOR_SIZE)
    stor(0, 0) = "Reservoir "   ' тут будет общея строка с датой сохранения дампа
    
    AddS stor, 1, 0, "              "
    AddS stor, 2, 0, "p_fw_perc     ", fw_perc
    AddS stor, 3, 0, "p_PI_m3dayatm     ", p_PI_m3dayatm
    AddS stor, 4, 0, "p_Pres_atma   ", p_Pres_atma
    AddS stor, 5, 0, "p_Pb_atma      ", Pb_atma
    
    AddS stor, 0, 2, "Qliq m3/day", " Pwf atma"
    AddSCurve stor, 1, 2, p_IPRcurve
    
    SaveState = stor
 End Function
 
Private Sub Class_Initialize()
  'Set' LogMsg = getLogMsg
End Sub
